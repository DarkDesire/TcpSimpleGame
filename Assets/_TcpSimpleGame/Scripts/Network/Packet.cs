// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from packet.proto</summary>
public static partial class PacketReflection {

  #region Descriptor
  /// <summary>File descriptor for packet.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PacketReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxwYWNrZXQucHJvdG8iJgoJUGFja2V0TVNHEgsKA2NtZBgBIAEoBRIMCgRk",
          "YXRhGAIgASgMIioKC1BhY2tldExvZ2luEg0KBWVtYWlsGAEgASgJEgwKBHBh",
          "c3MYAiABKAkiFAoSUGFja2V0TG9naW5TdWNjZXNzIhMKEVBhY2tldExvZ2lu",
          "RmFpbGVkIhgKFlBhY2tldFNldEZhbWlseVJlcXVlc3QiIQoPUGFja2V0U2V0",
          "RmFtaWx5Eg4KBmZhbWlseRgBIAEoCSIYChZQYWNrZXRTZXRGYW1pbHlTdWNj",
          "ZXNzIhcKFVBhY2tldFNldEZhbWlseUZhaWxlZCJEChNQYWNrZXRQcmV2aWV3",
          "QXZhdGFyEhAKCGF2YXRhcklkGAEgASgFEgwKBG5hbWUYAiABKAkSDQoFbGV2",
          "ZWwYAyABKAUigwEKFFBhY2tldFByZXZpZXdBdmF0YXJzEiUKB2F2YXRhcnMY",
          "ASADKAsyFC5QYWNrZXRQcmV2aWV3QXZhdGFyEhYKDmNyZWF0ZWRBdmF0YXJz",
          "GAIgASgFEhgKEGF2YWlsYWJsZUF2YXRhcnMYAyABKAUSEgoKbWF4QXZhdGFy",
          "cxgEIAEoBSIiChJQYWNrZXRTZXROZXdBdmF0YXISDAoEbmFtZRgBIAEoCSIb",
          "ChlQYWNrZXRTZXROZXdBdmF0YXJTdWNjZXNzIhoKGFBhY2tldFNldE5ld0F2",
          "YXRhckZhaWxlZCI6ChNQYWNrZXRKb2luVG9DaGFubmVsEhAKCGF2YXRhcklk",
          "GAEgASgFEhEKCWNoYW5uZWxJZBgCIAEoBSIxCg5QYWNrZXRQb3NpdGlvbhIJ",
          "CgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAiIsCg5QYWNrZXRSb3Rh",
          "dGlvbhINCgVwaXRjaBgBIAEoAhILCgN5YXcYAiABKAIiVwoPUGFja2V0VHJh",
          "bnNmb3JtEiEKCHBvc2l0aW9uGAEgASgLMg8uUGFja2V0UG9zaXRpb24SIQoI",
          "cm90YXRpb24YAiABKAsyDy5QYWNrZXRSb3RhdGlvbiJACgxQYWNrZXRIZWFs",
          "dGgSDwoHY3VycmVudBgBIAEoBRIPCgdtYXhpbXVtGAIgASgFEg4KBmlzRGVh",
          "ZBgDIAEoCCIvCgtQYWNrZXRNYW5uYRIPCgdjdXJyZW50GAEgASgFEg8KB21h",
          "eGltdW0YAiABKAUi5QEKDFBhY2tldEF2YXRhchIQCghhdmF0YXJJZBgBIAEo",
          "BRIQCghmYW1pbHlJZBgCIAEoBRISCgpmYW1pbHlOYW1lGAMgASgJEgwKBG5h",
          "bWUYBCABKAkSDQoFbGV2ZWwYBSABKAUSIwoJdHJhbnNmb3JtGAYgASgLMhAu",
          "UGFja2V0VHJhbnNmb3JtEhEKCWFuaW1TdGF0ZRgHIAEoBRIdCgZoZWFsdGgY",
          "CCABKAsyDS5QYWNrZXRIZWFsdGgSGwoFbWFubmEYCSABKAsyDC5QYWNrZXRN",
          "YW5uYRIMCgR0eXBlGAogASgFIi8KDVBhY2tldEF2YXRhcnMSHgoHYXZhdGFy",
          "cxgBIAMoCzINLlBhY2tldEF2YXRhciIzChJQYWNrZXRKb2luZWRBdmF0YXIS",
          "HQoGYXZhdGFyGAEgASgLMg0uUGFja2V0QXZhdGFyIjEKEFBhY2tldEF2YXRh",
          "ck1vdmUSHQoGYXZhdGFyGAEgASgLMg0uUGFja2V0QXZhdGFyIjcKFlBhY2tl",
          "dEF2YXRhckFuaW1DaGFuZ2USHQoGYXZhdGFyGAEgASgLMg0uUGFja2V0QXZh",
          "dGFyIjgKC1BhY2tldFNob290EikKEHNob290RW5kUG9zaXRpb24YASABKAsy",
          "Dy5QYWNrZXRQb3NpdGlvbiInChNQYWNrZXRTaG9vdFRvQXZhdGFyEhAKCGF2",
          "YXRhcklkGAEgASgFImQKElBhY2tldFNob290U3VjY2VzcxIjCgxzZW5kZXJB",
          "dmF0YXIYASABKAsyDS5QYWNrZXRBdmF0YXISKQoQc2hvb3RFbmRQb3NpdGlv",
          "bhgCIAEoCzIPLlBhY2tldFBvc2l0aW9uIlgKGlBhY2tldFNob290VG9BdmF0",
          "YXJTdWNjZXNzEhsKE3NlbmRlclNob290QXZhdGFySWQYASABKAUSHQoVcmVj",
          "ZWl2ZXJTaG9vdEF2YXRhcklkGAIgASgFIhMKEVBhY2tldFNob290RmFpbGVk",
          "IkAKDlBhY2tldEtpbGxlZEJ5EhYKDnZpY3RpbUF2YXRhcklkGAEgASgFEhYK",
          "DmtpbGxlckF2YXRhcklkGAIgASgFIi4KDVBhY2tldFJlc3Bhd24SHQoGYXZh",
          "dGFyGAEgASgLMg0uUGFja2V0QXZhdGFyIiQKEFBhY2tldEF2YXRhckxlZnQS",
          "EAoIYXZhdGFySWQYASABKAUiNAoMUGFja2V0QmFubmVkEg8KB2JhblRpbWUY",
          "ASABKAUSEwoLYmFuRHVyYXRpb24YAiABKAUiEgoQUGFja2V0RGlzY29ubmVj",
          "dGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketMSG), global::PacketMSG.Parser, new[]{ "Cmd", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketLogin), global::PacketLogin.Parser, new[]{ "Email", "Pass" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketLoginSuccess), global::PacketLoginSuccess.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketLoginFailed), global::PacketLoginFailed.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetFamilyRequest), global::PacketSetFamilyRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetFamily), global::PacketSetFamily.Parser, new[]{ "Family" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetFamilySuccess), global::PacketSetFamilySuccess.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetFamilyFailed), global::PacketSetFamilyFailed.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketPreviewAvatar), global::PacketPreviewAvatar.Parser, new[]{ "AvatarId", "Name", "Level" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketPreviewAvatars), global::PacketPreviewAvatars.Parser, new[]{ "Avatars", "CreatedAvatars", "AvailableAvatars", "MaxAvatars" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetNewAvatar), global::PacketSetNewAvatar.Parser, new[]{ "Name" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetNewAvatarSuccess), global::PacketSetNewAvatarSuccess.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketSetNewAvatarFailed), global::PacketSetNewAvatarFailed.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketJoinToChannel), global::PacketJoinToChannel.Parser, new[]{ "AvatarId", "ChannelId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketPosition), global::PacketPosition.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketRotation), global::PacketRotation.Parser, new[]{ "Pitch", "Yaw" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketTransform), global::PacketTransform.Parser, new[]{ "Position", "Rotation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketHealth), global::PacketHealth.Parser, new[]{ "Current", "Maximum", "IsDead" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketManna), global::PacketManna.Parser, new[]{ "Current", "Maximum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketAvatar), global::PacketAvatar.Parser, new[]{ "AvatarId", "FamilyId", "FamilyName", "Name", "Level", "Transform", "AnimState", "Health", "Manna", "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketAvatars), global::PacketAvatars.Parser, new[]{ "Avatars" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketJoinedAvatar), global::PacketJoinedAvatar.Parser, new[]{ "Avatar" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketAvatarMove), global::PacketAvatarMove.Parser, new[]{ "Avatar" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketAvatarAnimChange), global::PacketAvatarAnimChange.Parser, new[]{ "Avatar" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketShoot), global::PacketShoot.Parser, new[]{ "ShootEndPosition" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketShootToAvatar), global::PacketShootToAvatar.Parser, new[]{ "AvatarId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketShootSuccess), global::PacketShootSuccess.Parser, new[]{ "SenderAvatar", "ShootEndPosition" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketShootToAvatarSuccess), global::PacketShootToAvatarSuccess.Parser, new[]{ "SenderShootAvatarId", "ReceiverShootAvatarId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketShootFailed), global::PacketShootFailed.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketKilledBy), global::PacketKilledBy.Parser, new[]{ "VictimAvatarId", "KillerAvatarId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketRespawn), global::PacketRespawn.Parser, new[]{ "Avatar" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketAvatarLeft), global::PacketAvatarLeft.Parser, new[]{ "AvatarId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketBanned), global::PacketBanned.Parser, new[]{ "BanTime", "BanDuration" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PacketDisconnect), global::PacketDisconnect.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PacketMSG : pb::IMessage<PacketMSG> {
  private static readonly pb::MessageParser<PacketMSG> _parser = new pb::MessageParser<PacketMSG>(() => new PacketMSG());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketMSG> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketMSG() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketMSG(PacketMSG other) : this() {
    cmd_ = other.cmd_;
    data_ = other.data_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketMSG Clone() {
    return new PacketMSG(this);
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 1;
  private int cmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Cmd {
    get { return cmd_; }
    set {
      cmd_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketMSG);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketMSG other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cmd != other.Cmd) return false;
    if (Data != other.Data) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cmd != 0) hash ^= Cmd.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cmd != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Cmd);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Data);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cmd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketMSG other) {
    if (other == null) {
      return;
    }
    if (other.Cmd != 0) {
      Cmd = other.Cmd;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Cmd = input.ReadInt32();
          break;
        }
        case 18: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketLogin : pb::IMessage<PacketLogin> {
  private static readonly pb::MessageParser<PacketLogin> _parser = new pb::MessageParser<PacketLogin>(() => new PacketLogin());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLogin(PacketLogin other) : this() {
    email_ = other.email_;
    pass_ = other.pass_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLogin Clone() {
    return new PacketLogin(this);
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 1;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pass" field.</summary>
  public const int PassFieldNumber = 2;
  private string pass_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Pass {
    get { return pass_; }
    set {
      pass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Email != other.Email) return false;
    if (Pass != other.Pass) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (Pass.Length != 0) hash ^= Pass.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Email.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Email);
    }
    if (Pass.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Pass);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (Pass.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Pass);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketLogin other) {
    if (other == null) {
      return;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.Pass.Length != 0) {
      Pass = other.Pass;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Email = input.ReadString();
          break;
        }
        case 18: {
          Pass = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketLoginSuccess : pb::IMessage<PacketLoginSuccess> {
  private static readonly pb::MessageParser<PacketLoginSuccess> _parser = new pb::MessageParser<PacketLoginSuccess>(() => new PacketLoginSuccess());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketLoginSuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginSuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginSuccess(PacketLoginSuccess other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginSuccess Clone() {
    return new PacketLoginSuccess(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketLoginSuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketLoginSuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketLoginSuccess other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketLoginFailed : pb::IMessage<PacketLoginFailed> {
  private static readonly pb::MessageParser<PacketLoginFailed> _parser = new pb::MessageParser<PacketLoginFailed>(() => new PacketLoginFailed());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketLoginFailed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginFailed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginFailed(PacketLoginFailed other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketLoginFailed Clone() {
    return new PacketLoginFailed(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketLoginFailed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketLoginFailed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketLoginFailed other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketSetFamilyRequest : pb::IMessage<PacketSetFamilyRequest> {
  private static readonly pb::MessageParser<PacketSetFamilyRequest> _parser = new pb::MessageParser<PacketSetFamilyRequest>(() => new PacketSetFamilyRequest());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetFamilyRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyRequest(PacketSetFamilyRequest other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyRequest Clone() {
    return new PacketSetFamilyRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetFamilyRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetFamilyRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetFamilyRequest other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketSetFamily : pb::IMessage<PacketSetFamily> {
  private static readonly pb::MessageParser<PacketSetFamily> _parser = new pb::MessageParser<PacketSetFamily>(() => new PacketSetFamily());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetFamily> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamily() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamily(PacketSetFamily other) : this() {
    family_ = other.family_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamily Clone() {
    return new PacketSetFamily(this);
  }

  /// <summary>Field number for the "family" field.</summary>
  public const int FamilyFieldNumber = 1;
  private string family_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Family {
    get { return family_; }
    set {
      family_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetFamily);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetFamily other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Family != other.Family) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Family.Length != 0) hash ^= Family.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Family.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Family);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Family.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Family);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetFamily other) {
    if (other == null) {
      return;
    }
    if (other.Family.Length != 0) {
      Family = other.Family;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Family = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketSetFamilySuccess : pb::IMessage<PacketSetFamilySuccess> {
  private static readonly pb::MessageParser<PacketSetFamilySuccess> _parser = new pb::MessageParser<PacketSetFamilySuccess>(() => new PacketSetFamilySuccess());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetFamilySuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilySuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilySuccess(PacketSetFamilySuccess other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilySuccess Clone() {
    return new PacketSetFamilySuccess(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetFamilySuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetFamilySuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetFamilySuccess other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketSetFamilyFailed : pb::IMessage<PacketSetFamilyFailed> {
  private static readonly pb::MessageParser<PacketSetFamilyFailed> _parser = new pb::MessageParser<PacketSetFamilyFailed>(() => new PacketSetFamilyFailed());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetFamilyFailed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyFailed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyFailed(PacketSetFamilyFailed other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetFamilyFailed Clone() {
    return new PacketSetFamilyFailed(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetFamilyFailed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetFamilyFailed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetFamilyFailed other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketPreviewAvatar : pb::IMessage<PacketPreviewAvatar> {
  private static readonly pb::MessageParser<PacketPreviewAvatar> _parser = new pb::MessageParser<PacketPreviewAvatar>(() => new PacketPreviewAvatar());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketPreviewAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatar(PacketPreviewAvatar other) : this() {
    avatarId_ = other.avatarId_;
    name_ = other.name_;
    level_ = other.level_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatar Clone() {
    return new PacketPreviewAvatar(this);
  }

  /// <summary>Field number for the "avatarId" field.</summary>
  public const int AvatarIdFieldNumber = 1;
  private int avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketPreviewAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketPreviewAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarId != other.AvatarId) return false;
    if (Name != other.Name) return false;
    if (Level != other.Level) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AvatarId);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Level);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketPreviewAvatar other) {
    if (other == null) {
      return;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AvatarId = input.ReadInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          Level = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketPreviewAvatars : pb::IMessage<PacketPreviewAvatars> {
  private static readonly pb::MessageParser<PacketPreviewAvatars> _parser = new pb::MessageParser<PacketPreviewAvatars>(() => new PacketPreviewAvatars());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketPreviewAvatars> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatars() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatars(PacketPreviewAvatars other) : this() {
    avatars_ = other.avatars_.Clone();
    createdAvatars_ = other.createdAvatars_;
    availableAvatars_ = other.availableAvatars_;
    maxAvatars_ = other.maxAvatars_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPreviewAvatars Clone() {
    return new PacketPreviewAvatars(this);
  }

  /// <summary>Field number for the "avatars" field.</summary>
  public const int AvatarsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PacketPreviewAvatar> _repeated_avatars_codec
      = pb::FieldCodec.ForMessage(10, global::PacketPreviewAvatar.Parser);
  private readonly pbc::RepeatedField<global::PacketPreviewAvatar> avatars_ = new pbc::RepeatedField<global::PacketPreviewAvatar>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PacketPreviewAvatar> Avatars {
    get { return avatars_; }
  }

  /// <summary>Field number for the "createdAvatars" field.</summary>
  public const int CreatedAvatarsFieldNumber = 2;
  private int createdAvatars_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CreatedAvatars {
    get { return createdAvatars_; }
    set {
      createdAvatars_ = value;
    }
  }

  /// <summary>Field number for the "availableAvatars" field.</summary>
  public const int AvailableAvatarsFieldNumber = 3;
  private int availableAvatars_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvailableAvatars {
    get { return availableAvatars_; }
    set {
      availableAvatars_ = value;
    }
  }

  /// <summary>Field number for the "maxAvatars" field.</summary>
  public const int MaxAvatarsFieldNumber = 4;
  private int maxAvatars_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxAvatars {
    get { return maxAvatars_; }
    set {
      maxAvatars_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketPreviewAvatars);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketPreviewAvatars other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!avatars_.Equals(other.avatars_)) return false;
    if (CreatedAvatars != other.CreatedAvatars) return false;
    if (AvailableAvatars != other.AvailableAvatars) return false;
    if (MaxAvatars != other.MaxAvatars) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= avatars_.GetHashCode();
    if (CreatedAvatars != 0) hash ^= CreatedAvatars.GetHashCode();
    if (AvailableAvatars != 0) hash ^= AvailableAvatars.GetHashCode();
    if (MaxAvatars != 0) hash ^= MaxAvatars.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    avatars_.WriteTo(output, _repeated_avatars_codec);
    if (CreatedAvatars != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CreatedAvatars);
    }
    if (AvailableAvatars != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AvailableAvatars);
    }
    if (MaxAvatars != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(MaxAvatars);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += avatars_.CalculateSize(_repeated_avatars_codec);
    if (CreatedAvatars != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreatedAvatars);
    }
    if (AvailableAvatars != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableAvatars);
    }
    if (MaxAvatars != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxAvatars);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketPreviewAvatars other) {
    if (other == null) {
      return;
    }
    avatars_.Add(other.avatars_);
    if (other.CreatedAvatars != 0) {
      CreatedAvatars = other.CreatedAvatars;
    }
    if (other.AvailableAvatars != 0) {
      AvailableAvatars = other.AvailableAvatars;
    }
    if (other.MaxAvatars != 0) {
      MaxAvatars = other.MaxAvatars;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          avatars_.AddEntriesFrom(input, _repeated_avatars_codec);
          break;
        }
        case 16: {
          CreatedAvatars = input.ReadInt32();
          break;
        }
        case 24: {
          AvailableAvatars = input.ReadInt32();
          break;
        }
        case 32: {
          MaxAvatars = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketSetNewAvatar : pb::IMessage<PacketSetNewAvatar> {
  private static readonly pb::MessageParser<PacketSetNewAvatar> _parser = new pb::MessageParser<PacketSetNewAvatar>(() => new PacketSetNewAvatar());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetNewAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatar(PacketSetNewAvatar other) : this() {
    name_ = other.name_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatar Clone() {
    return new PacketSetNewAvatar(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetNewAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetNewAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetNewAvatar other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketSetNewAvatarSuccess : pb::IMessage<PacketSetNewAvatarSuccess> {
  private static readonly pb::MessageParser<PacketSetNewAvatarSuccess> _parser = new pb::MessageParser<PacketSetNewAvatarSuccess>(() => new PacketSetNewAvatarSuccess());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetNewAvatarSuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarSuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarSuccess(PacketSetNewAvatarSuccess other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarSuccess Clone() {
    return new PacketSetNewAvatarSuccess(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetNewAvatarSuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetNewAvatarSuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetNewAvatarSuccess other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketSetNewAvatarFailed : pb::IMessage<PacketSetNewAvatarFailed> {
  private static readonly pb::MessageParser<PacketSetNewAvatarFailed> _parser = new pb::MessageParser<PacketSetNewAvatarFailed>(() => new PacketSetNewAvatarFailed());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketSetNewAvatarFailed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarFailed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarFailed(PacketSetNewAvatarFailed other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketSetNewAvatarFailed Clone() {
    return new PacketSetNewAvatarFailed(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketSetNewAvatarFailed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketSetNewAvatarFailed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketSetNewAvatarFailed other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketJoinToChannel : pb::IMessage<PacketJoinToChannel> {
  private static readonly pb::MessageParser<PacketJoinToChannel> _parser = new pb::MessageParser<PacketJoinToChannel>(() => new PacketJoinToChannel());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketJoinToChannel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinToChannel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinToChannel(PacketJoinToChannel other) : this() {
    avatarId_ = other.avatarId_;
    channelId_ = other.channelId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinToChannel Clone() {
    return new PacketJoinToChannel(this);
  }

  /// <summary>Field number for the "avatarId" field.</summary>
  public const int AvatarIdFieldNumber = 1;
  private int avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  /// <summary>Field number for the "channelId" field.</summary>
  public const int ChannelIdFieldNumber = 2;
  private int channelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChannelId {
    get { return channelId_; }
    set {
      channelId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketJoinToChannel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketJoinToChannel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarId != other.AvatarId) return false;
    if (ChannelId != other.ChannelId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AvatarId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChannelId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
    }
    if (ChannelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketJoinToChannel other) {
    if (other == null) {
      return;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
    if (other.ChannelId != 0) {
      ChannelId = other.ChannelId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AvatarId = input.ReadInt32();
          break;
        }
        case 16: {
          ChannelId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketPosition : pb::IMessage<PacketPosition> {
  private static readonly pb::MessageParser<PacketPosition> _parser = new pb::MessageParser<PacketPosition>(() => new PacketPosition());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketPosition> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPosition() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPosition(PacketPosition other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketPosition Clone() {
    return new PacketPosition(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketPosition);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketPosition other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= X.GetHashCode();
    if (Y != 0F) hash ^= Y.GetHashCode();
    if (Z != 0F) hash ^= Z.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketPosition other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketRotation : pb::IMessage<PacketRotation> {
  private static readonly pb::MessageParser<PacketRotation> _parser = new pb::MessageParser<PacketRotation>(() => new PacketRotation());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketRotation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRotation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRotation(PacketRotation other) : this() {
    pitch_ = other.pitch_;
    yaw_ = other.yaw_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRotation Clone() {
    return new PacketRotation(this);
  }

  /// <summary>Field number for the "pitch" field.</summary>
  public const int PitchFieldNumber = 1;
  private float pitch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Pitch {
    get { return pitch_; }
    set {
      pitch_ = value;
    }
  }

  /// <summary>Field number for the "yaw" field.</summary>
  public const int YawFieldNumber = 2;
  private float yaw_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Yaw {
    get { return yaw_; }
    set {
      yaw_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketRotation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketRotation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Pitch != other.Pitch) return false;
    if (Yaw != other.Yaw) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Pitch != 0F) hash ^= Pitch.GetHashCode();
    if (Yaw != 0F) hash ^= Yaw.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Pitch != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Pitch);
    }
    if (Yaw != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Yaw);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Pitch != 0F) {
      size += 1 + 4;
    }
    if (Yaw != 0F) {
      size += 1 + 4;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketRotation other) {
    if (other == null) {
      return;
    }
    if (other.Pitch != 0F) {
      Pitch = other.Pitch;
    }
    if (other.Yaw != 0F) {
      Yaw = other.Yaw;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 13: {
          Pitch = input.ReadFloat();
          break;
        }
        case 21: {
          Yaw = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketTransform : pb::IMessage<PacketTransform> {
  private static readonly pb::MessageParser<PacketTransform> _parser = new pb::MessageParser<PacketTransform>(() => new PacketTransform());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketTransform> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketTransform() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketTransform(PacketTransform other) : this() {
    Position = other.position_ != null ? other.Position.Clone() : null;
    Rotation = other.rotation_ != null ? other.Rotation.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketTransform Clone() {
    return new PacketTransform(this);
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::PacketPosition position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketPosition Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 2;
  private global::PacketRotation rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketRotation Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketTransform);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketTransform other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Rotation);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketTransform other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        position_ = new global::PacketPosition();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        rotation_ = new global::PacketRotation();
      }
      Rotation.MergeFrom(other.Rotation);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (position_ == null) {
            position_ = new global::PacketPosition();
          }
          input.ReadMessage(position_);
          break;
        }
        case 18: {
          if (rotation_ == null) {
            rotation_ = new global::PacketRotation();
          }
          input.ReadMessage(rotation_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketHealth : pb::IMessage<PacketHealth> {
  private static readonly pb::MessageParser<PacketHealth> _parser = new pb::MessageParser<PacketHealth>(() => new PacketHealth());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketHealth> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketHealth() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketHealth(PacketHealth other) : this() {
    current_ = other.current_;
    maximum_ = other.maximum_;
    isDead_ = other.isDead_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketHealth Clone() {
    return new PacketHealth(this);
  }

  /// <summary>Field number for the "current" field.</summary>
  public const int CurrentFieldNumber = 1;
  private int current_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Current {
    get { return current_; }
    set {
      current_ = value;
    }
  }

  /// <summary>Field number for the "maximum" field.</summary>
  public const int MaximumFieldNumber = 2;
  private int maximum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maximum {
    get { return maximum_; }
    set {
      maximum_ = value;
    }
  }

  /// <summary>Field number for the "isDead" field.</summary>
  public const int IsDeadFieldNumber = 3;
  private bool isDead_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDead {
    get { return isDead_; }
    set {
      isDead_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketHealth);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketHealth other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Current != other.Current) return false;
    if (Maximum != other.Maximum) return false;
    if (IsDead != other.IsDead) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Current != 0) hash ^= Current.GetHashCode();
    if (Maximum != 0) hash ^= Maximum.GetHashCode();
    if (IsDead != false) hash ^= IsDead.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Current != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Current);
    }
    if (Maximum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Maximum);
    }
    if (IsDead != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsDead);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Current != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Current);
    }
    if (Maximum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maximum);
    }
    if (IsDead != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketHealth other) {
    if (other == null) {
      return;
    }
    if (other.Current != 0) {
      Current = other.Current;
    }
    if (other.Maximum != 0) {
      Maximum = other.Maximum;
    }
    if (other.IsDead != false) {
      IsDead = other.IsDead;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Current = input.ReadInt32();
          break;
        }
        case 16: {
          Maximum = input.ReadInt32();
          break;
        }
        case 24: {
          IsDead = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketManna : pb::IMessage<PacketManna> {
  private static readonly pb::MessageParser<PacketManna> _parser = new pb::MessageParser<PacketManna>(() => new PacketManna());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketManna> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketManna() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketManna(PacketManna other) : this() {
    current_ = other.current_;
    maximum_ = other.maximum_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketManna Clone() {
    return new PacketManna(this);
  }

  /// <summary>Field number for the "current" field.</summary>
  public const int CurrentFieldNumber = 1;
  private int current_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Current {
    get { return current_; }
    set {
      current_ = value;
    }
  }

  /// <summary>Field number for the "maximum" field.</summary>
  public const int MaximumFieldNumber = 2;
  private int maximum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Maximum {
    get { return maximum_; }
    set {
      maximum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketManna);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketManna other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Current != other.Current) return false;
    if (Maximum != other.Maximum) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Current != 0) hash ^= Current.GetHashCode();
    if (Maximum != 0) hash ^= Maximum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Current != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Current);
    }
    if (Maximum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Maximum);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Current != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Current);
    }
    if (Maximum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maximum);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketManna other) {
    if (other == null) {
      return;
    }
    if (other.Current != 0) {
      Current = other.Current;
    }
    if (other.Maximum != 0) {
      Maximum = other.Maximum;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Current = input.ReadInt32();
          break;
        }
        case 16: {
          Maximum = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketAvatar : pb::IMessage<PacketAvatar> {
  private static readonly pb::MessageParser<PacketAvatar> _parser = new pb::MessageParser<PacketAvatar>(() => new PacketAvatar());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatar(PacketAvatar other) : this() {
    avatarId_ = other.avatarId_;
    familyId_ = other.familyId_;
    familyName_ = other.familyName_;
    name_ = other.name_;
    level_ = other.level_;
    Transform = other.transform_ != null ? other.Transform.Clone() : null;
    animState_ = other.animState_;
    Health = other.health_ != null ? other.Health.Clone() : null;
    Manna = other.manna_ != null ? other.Manna.Clone() : null;
    type_ = other.type_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatar Clone() {
    return new PacketAvatar(this);
  }

  /// <summary>Field number for the "avatarId" field.</summary>
  public const int AvatarIdFieldNumber = 1;
  private int avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  /// <summary>Field number for the "familyId" field.</summary>
  public const int FamilyIdFieldNumber = 2;
  private int familyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FamilyId {
    get { return familyId_; }
    set {
      familyId_ = value;
    }
  }

  /// <summary>Field number for the "familyName" field.</summary>
  public const int FamilyNameFieldNumber = 3;
  private string familyName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FamilyName {
    get { return familyName_; }
    set {
      familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 4;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 5;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "transform" field.</summary>
  public const int TransformFieldNumber = 6;
  private global::PacketTransform transform_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketTransform Transform {
    get { return transform_; }
    set {
      transform_ = value;
    }
  }

  /// <summary>Field number for the "animState" field.</summary>
  public const int AnimStateFieldNumber = 7;
  private int animState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AnimState {
    get { return animState_; }
    set {
      animState_ = value;
    }
  }

  /// <summary>Field number for the "health" field.</summary>
  public const int HealthFieldNumber = 8;
  private global::PacketHealth health_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketHealth Health {
    get { return health_; }
    set {
      health_ = value;
    }
  }

  /// <summary>Field number for the "manna" field.</summary>
  public const int MannaFieldNumber = 9;
  private global::PacketManna manna_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketManna Manna {
    get { return manna_; }
    set {
      manna_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 10;
  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarId != other.AvatarId) return false;
    if (FamilyId != other.FamilyId) return false;
    if (FamilyName != other.FamilyName) return false;
    if (Name != other.Name) return false;
    if (Level != other.Level) return false;
    if (!object.Equals(Transform, other.Transform)) return false;
    if (AnimState != other.AnimState) return false;
    if (!object.Equals(Health, other.Health)) return false;
    if (!object.Equals(Manna, other.Manna)) return false;
    if (Type != other.Type) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    if (FamilyId != 0) hash ^= FamilyId.GetHashCode();
    if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (transform_ != null) hash ^= Transform.GetHashCode();
    if (AnimState != 0) hash ^= AnimState.GetHashCode();
    if (health_ != null) hash ^= Health.GetHashCode();
    if (manna_ != null) hash ^= Manna.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AvatarId);
    }
    if (FamilyId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FamilyId);
    }
    if (FamilyName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(FamilyName);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Name);
    }
    if (Level != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Level);
    }
    if (transform_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Transform);
    }
    if (AnimState != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(AnimState);
    }
    if (health_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Health);
    }
    if (manna_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Manna);
    }
    if (Type != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(Type);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
    }
    if (FamilyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FamilyId);
    }
    if (FamilyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (transform_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
    }
    if (AnimState != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnimState);
    }
    if (health_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Health);
    }
    if (manna_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Manna);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketAvatar other) {
    if (other == null) {
      return;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
    if (other.FamilyId != 0) {
      FamilyId = other.FamilyId;
    }
    if (other.FamilyName.Length != 0) {
      FamilyName = other.FamilyName;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.transform_ != null) {
      if (transform_ == null) {
        transform_ = new global::PacketTransform();
      }
      Transform.MergeFrom(other.Transform);
    }
    if (other.AnimState != 0) {
      AnimState = other.AnimState;
    }
    if (other.health_ != null) {
      if (health_ == null) {
        health_ = new global::PacketHealth();
      }
      Health.MergeFrom(other.Health);
    }
    if (other.manna_ != null) {
      if (manna_ == null) {
        manna_ = new global::PacketManna();
      }
      Manna.MergeFrom(other.Manna);
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AvatarId = input.ReadInt32();
          break;
        }
        case 16: {
          FamilyId = input.ReadInt32();
          break;
        }
        case 26: {
          FamilyName = input.ReadString();
          break;
        }
        case 34: {
          Name = input.ReadString();
          break;
        }
        case 40: {
          Level = input.ReadInt32();
          break;
        }
        case 50: {
          if (transform_ == null) {
            transform_ = new global::PacketTransform();
          }
          input.ReadMessage(transform_);
          break;
        }
        case 56: {
          AnimState = input.ReadInt32();
          break;
        }
        case 66: {
          if (health_ == null) {
            health_ = new global::PacketHealth();
          }
          input.ReadMessage(health_);
          break;
        }
        case 74: {
          if (manna_ == null) {
            manna_ = new global::PacketManna();
          }
          input.ReadMessage(manna_);
          break;
        }
        case 80: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketAvatars : pb::IMessage<PacketAvatars> {
  private static readonly pb::MessageParser<PacketAvatars> _parser = new pb::MessageParser<PacketAvatars>(() => new PacketAvatars());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketAvatars> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatars() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatars(PacketAvatars other) : this() {
    avatars_ = other.avatars_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatars Clone() {
    return new PacketAvatars(this);
  }

  /// <summary>Field number for the "avatars" field.</summary>
  public const int AvatarsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PacketAvatar> _repeated_avatars_codec
      = pb::FieldCodec.ForMessage(10, global::PacketAvatar.Parser);
  private readonly pbc::RepeatedField<global::PacketAvatar> avatars_ = new pbc::RepeatedField<global::PacketAvatar>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PacketAvatar> Avatars {
    get { return avatars_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketAvatars);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketAvatars other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!avatars_.Equals(other.avatars_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= avatars_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    avatars_.WriteTo(output, _repeated_avatars_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += avatars_.CalculateSize(_repeated_avatars_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketAvatars other) {
    if (other == null) {
      return;
    }
    avatars_.Add(other.avatars_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          avatars_.AddEntriesFrom(input, _repeated_avatars_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketJoinedAvatar : pb::IMessage<PacketJoinedAvatar> {
  private static readonly pb::MessageParser<PacketJoinedAvatar> _parser = new pb::MessageParser<PacketJoinedAvatar>(() => new PacketJoinedAvatar());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketJoinedAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinedAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinedAvatar(PacketJoinedAvatar other) : this() {
    Avatar = other.avatar_ != null ? other.Avatar.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketJoinedAvatar Clone() {
    return new PacketJoinedAvatar(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private global::PacketAvatar avatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketAvatar Avatar {
    get { return avatar_; }
    set {
      avatar_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketJoinedAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketJoinedAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Avatar, other.Avatar)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (avatar_ != null) hash ^= Avatar.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (avatar_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (avatar_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketJoinedAvatar other) {
    if (other == null) {
      return;
    }
    if (other.avatar_ != null) {
      if (avatar_ == null) {
        avatar_ = new global::PacketAvatar();
      }
      Avatar.MergeFrom(other.Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (avatar_ == null) {
            avatar_ = new global::PacketAvatar();
          }
          input.ReadMessage(avatar_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketAvatarMove : pb::IMessage<PacketAvatarMove> {
  private static readonly pb::MessageParser<PacketAvatarMove> _parser = new pb::MessageParser<PacketAvatarMove>(() => new PacketAvatarMove());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketAvatarMove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarMove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarMove(PacketAvatarMove other) : this() {
    Avatar = other.avatar_ != null ? other.Avatar.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarMove Clone() {
    return new PacketAvatarMove(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private global::PacketAvatar avatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketAvatar Avatar {
    get { return avatar_; }
    set {
      avatar_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketAvatarMove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketAvatarMove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Avatar, other.Avatar)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (avatar_ != null) hash ^= Avatar.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (avatar_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (avatar_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketAvatarMove other) {
    if (other == null) {
      return;
    }
    if (other.avatar_ != null) {
      if (avatar_ == null) {
        avatar_ = new global::PacketAvatar();
      }
      Avatar.MergeFrom(other.Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (avatar_ == null) {
            avatar_ = new global::PacketAvatar();
          }
          input.ReadMessage(avatar_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketAvatarAnimChange : pb::IMessage<PacketAvatarAnimChange> {
  private static readonly pb::MessageParser<PacketAvatarAnimChange> _parser = new pb::MessageParser<PacketAvatarAnimChange>(() => new PacketAvatarAnimChange());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketAvatarAnimChange> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarAnimChange() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarAnimChange(PacketAvatarAnimChange other) : this() {
    Avatar = other.avatar_ != null ? other.Avatar.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarAnimChange Clone() {
    return new PacketAvatarAnimChange(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private global::PacketAvatar avatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketAvatar Avatar {
    get { return avatar_; }
    set {
      avatar_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketAvatarAnimChange);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketAvatarAnimChange other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Avatar, other.Avatar)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (avatar_ != null) hash ^= Avatar.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (avatar_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (avatar_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketAvatarAnimChange other) {
    if (other == null) {
      return;
    }
    if (other.avatar_ != null) {
      if (avatar_ == null) {
        avatar_ = new global::PacketAvatar();
      }
      Avatar.MergeFrom(other.Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (avatar_ == null) {
            avatar_ = new global::PacketAvatar();
          }
          input.ReadMessage(avatar_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketShoot : pb::IMessage<PacketShoot> {
  private static readonly pb::MessageParser<PacketShoot> _parser = new pb::MessageParser<PacketShoot>(() => new PacketShoot());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketShoot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShoot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShoot(PacketShoot other) : this() {
    ShootEndPosition = other.shootEndPosition_ != null ? other.ShootEndPosition.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShoot Clone() {
    return new PacketShoot(this);
  }

  /// <summary>Field number for the "shootEndPosition" field.</summary>
  public const int ShootEndPositionFieldNumber = 1;
  private global::PacketPosition shootEndPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketPosition ShootEndPosition {
    get { return shootEndPosition_; }
    set {
      shootEndPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketShoot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketShoot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ShootEndPosition, other.ShootEndPosition)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (shootEndPosition_ != null) hash ^= ShootEndPosition.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (shootEndPosition_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ShootEndPosition);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (shootEndPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShootEndPosition);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketShoot other) {
    if (other == null) {
      return;
    }
    if (other.shootEndPosition_ != null) {
      if (shootEndPosition_ == null) {
        shootEndPosition_ = new global::PacketPosition();
      }
      ShootEndPosition.MergeFrom(other.ShootEndPosition);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (shootEndPosition_ == null) {
            shootEndPosition_ = new global::PacketPosition();
          }
          input.ReadMessage(shootEndPosition_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketShootToAvatar : pb::IMessage<PacketShootToAvatar> {
  private static readonly pb::MessageParser<PacketShootToAvatar> _parser = new pb::MessageParser<PacketShootToAvatar>(() => new PacketShootToAvatar());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketShootToAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatar(PacketShootToAvatar other) : this() {
    avatarId_ = other.avatarId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatar Clone() {
    return new PacketShootToAvatar(this);
  }

  /// <summary>Field number for the "avatarId" field.</summary>
  public const int AvatarIdFieldNumber = 1;
  private int avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketShootToAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketShootToAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarId != other.AvatarId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AvatarId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketShootToAvatar other) {
    if (other == null) {
      return;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AvatarId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketShootSuccess : pb::IMessage<PacketShootSuccess> {
  private static readonly pb::MessageParser<PacketShootSuccess> _parser = new pb::MessageParser<PacketShootSuccess>(() => new PacketShootSuccess());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketShootSuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootSuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootSuccess(PacketShootSuccess other) : this() {
    SenderAvatar = other.senderAvatar_ != null ? other.SenderAvatar.Clone() : null;
    ShootEndPosition = other.shootEndPosition_ != null ? other.ShootEndPosition.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootSuccess Clone() {
    return new PacketShootSuccess(this);
  }

  /// <summary>Field number for the "senderAvatar" field.</summary>
  public const int SenderAvatarFieldNumber = 1;
  private global::PacketAvatar senderAvatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketAvatar SenderAvatar {
    get { return senderAvatar_; }
    set {
      senderAvatar_ = value;
    }
  }

  /// <summary>Field number for the "shootEndPosition" field.</summary>
  public const int ShootEndPositionFieldNumber = 2;
  private global::PacketPosition shootEndPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketPosition ShootEndPosition {
    get { return shootEndPosition_; }
    set {
      shootEndPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketShootSuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketShootSuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SenderAvatar, other.SenderAvatar)) return false;
    if (!object.Equals(ShootEndPosition, other.ShootEndPosition)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (senderAvatar_ != null) hash ^= SenderAvatar.GetHashCode();
    if (shootEndPosition_ != null) hash ^= ShootEndPosition.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (senderAvatar_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SenderAvatar);
    }
    if (shootEndPosition_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ShootEndPosition);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (senderAvatar_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderAvatar);
    }
    if (shootEndPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShootEndPosition);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketShootSuccess other) {
    if (other == null) {
      return;
    }
    if (other.senderAvatar_ != null) {
      if (senderAvatar_ == null) {
        senderAvatar_ = new global::PacketAvatar();
      }
      SenderAvatar.MergeFrom(other.SenderAvatar);
    }
    if (other.shootEndPosition_ != null) {
      if (shootEndPosition_ == null) {
        shootEndPosition_ = new global::PacketPosition();
      }
      ShootEndPosition.MergeFrom(other.ShootEndPosition);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (senderAvatar_ == null) {
            senderAvatar_ = new global::PacketAvatar();
          }
          input.ReadMessage(senderAvatar_);
          break;
        }
        case 18: {
          if (shootEndPosition_ == null) {
            shootEndPosition_ = new global::PacketPosition();
          }
          input.ReadMessage(shootEndPosition_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketShootToAvatarSuccess : pb::IMessage<PacketShootToAvatarSuccess> {
  private static readonly pb::MessageParser<PacketShootToAvatarSuccess> _parser = new pb::MessageParser<PacketShootToAvatarSuccess>(() => new PacketShootToAvatarSuccess());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketShootToAvatarSuccess> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatarSuccess() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatarSuccess(PacketShootToAvatarSuccess other) : this() {
    senderShootAvatarId_ = other.senderShootAvatarId_;
    receiverShootAvatarId_ = other.receiverShootAvatarId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootToAvatarSuccess Clone() {
    return new PacketShootToAvatarSuccess(this);
  }

  /// <summary>Field number for the "senderShootAvatarId" field.</summary>
  public const int SenderShootAvatarIdFieldNumber = 1;
  private int senderShootAvatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SenderShootAvatarId {
    get { return senderShootAvatarId_; }
    set {
      senderShootAvatarId_ = value;
    }
  }

  /// <summary>Field number for the "receiverShootAvatarId" field.</summary>
  public const int ReceiverShootAvatarIdFieldNumber = 2;
  private int receiverShootAvatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ReceiverShootAvatarId {
    get { return receiverShootAvatarId_; }
    set {
      receiverShootAvatarId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketShootToAvatarSuccess);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketShootToAvatarSuccess other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SenderShootAvatarId != other.SenderShootAvatarId) return false;
    if (ReceiverShootAvatarId != other.ReceiverShootAvatarId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SenderShootAvatarId != 0) hash ^= SenderShootAvatarId.GetHashCode();
    if (ReceiverShootAvatarId != 0) hash ^= ReceiverShootAvatarId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SenderShootAvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SenderShootAvatarId);
    }
    if (ReceiverShootAvatarId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ReceiverShootAvatarId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SenderShootAvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderShootAvatarId);
    }
    if (ReceiverShootAvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverShootAvatarId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketShootToAvatarSuccess other) {
    if (other == null) {
      return;
    }
    if (other.SenderShootAvatarId != 0) {
      SenderShootAvatarId = other.SenderShootAvatarId;
    }
    if (other.ReceiverShootAvatarId != 0) {
      ReceiverShootAvatarId = other.ReceiverShootAvatarId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SenderShootAvatarId = input.ReadInt32();
          break;
        }
        case 16: {
          ReceiverShootAvatarId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketShootFailed : pb::IMessage<PacketShootFailed> {
  private static readonly pb::MessageParser<PacketShootFailed> _parser = new pb::MessageParser<PacketShootFailed>(() => new PacketShootFailed());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketShootFailed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootFailed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootFailed(PacketShootFailed other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketShootFailed Clone() {
    return new PacketShootFailed(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketShootFailed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketShootFailed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketShootFailed other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PacketKilledBy : pb::IMessage<PacketKilledBy> {
  private static readonly pb::MessageParser<PacketKilledBy> _parser = new pb::MessageParser<PacketKilledBy>(() => new PacketKilledBy());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketKilledBy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketKilledBy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketKilledBy(PacketKilledBy other) : this() {
    victimAvatarId_ = other.victimAvatarId_;
    killerAvatarId_ = other.killerAvatarId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketKilledBy Clone() {
    return new PacketKilledBy(this);
  }

  /// <summary>Field number for the "victimAvatarId" field.</summary>
  public const int VictimAvatarIdFieldNumber = 1;
  private int victimAvatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VictimAvatarId {
    get { return victimAvatarId_; }
    set {
      victimAvatarId_ = value;
    }
  }

  /// <summary>Field number for the "killerAvatarId" field.</summary>
  public const int KillerAvatarIdFieldNumber = 2;
  private int killerAvatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int KillerAvatarId {
    get { return killerAvatarId_; }
    set {
      killerAvatarId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketKilledBy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketKilledBy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VictimAvatarId != other.VictimAvatarId) return false;
    if (KillerAvatarId != other.KillerAvatarId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (VictimAvatarId != 0) hash ^= VictimAvatarId.GetHashCode();
    if (KillerAvatarId != 0) hash ^= KillerAvatarId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (VictimAvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(VictimAvatarId);
    }
    if (KillerAvatarId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(KillerAvatarId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (VictimAvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VictimAvatarId);
    }
    if (KillerAvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillerAvatarId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketKilledBy other) {
    if (other == null) {
      return;
    }
    if (other.VictimAvatarId != 0) {
      VictimAvatarId = other.VictimAvatarId;
    }
    if (other.KillerAvatarId != 0) {
      KillerAvatarId = other.KillerAvatarId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          VictimAvatarId = input.ReadInt32();
          break;
        }
        case 16: {
          KillerAvatarId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketRespawn : pb::IMessage<PacketRespawn> {
  private static readonly pb::MessageParser<PacketRespawn> _parser = new pb::MessageParser<PacketRespawn>(() => new PacketRespawn());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketRespawn> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRespawn() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRespawn(PacketRespawn other) : this() {
    Avatar = other.avatar_ != null ? other.Avatar.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketRespawn Clone() {
    return new PacketRespawn(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private global::PacketAvatar avatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PacketAvatar Avatar {
    get { return avatar_; }
    set {
      avatar_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketRespawn);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketRespawn other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Avatar, other.Avatar)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (avatar_ != null) hash ^= Avatar.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (avatar_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (avatar_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketRespawn other) {
    if (other == null) {
      return;
    }
    if (other.avatar_ != null) {
      if (avatar_ == null) {
        avatar_ = new global::PacketAvatar();
      }
      Avatar.MergeFrom(other.Avatar);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (avatar_ == null) {
            avatar_ = new global::PacketAvatar();
          }
          input.ReadMessage(avatar_);
          break;
        }
      }
    }
  }

}

public sealed partial class PacketAvatarLeft : pb::IMessage<PacketAvatarLeft> {
  private static readonly pb::MessageParser<PacketAvatarLeft> _parser = new pb::MessageParser<PacketAvatarLeft>(() => new PacketAvatarLeft());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketAvatarLeft> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarLeft() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarLeft(PacketAvatarLeft other) : this() {
    avatarId_ = other.avatarId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketAvatarLeft Clone() {
    return new PacketAvatarLeft(this);
  }

  /// <summary>Field number for the "avatarId" field.</summary>
  public const int AvatarIdFieldNumber = 1;
  private int avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketAvatarLeft);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketAvatarLeft other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarId != other.AvatarId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AvatarId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AvatarId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketAvatarLeft other) {
    if (other == null) {
      return;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AvatarId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketBanned : pb::IMessage<PacketBanned> {
  private static readonly pb::MessageParser<PacketBanned> _parser = new pb::MessageParser<PacketBanned>(() => new PacketBanned());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketBanned> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketBanned() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketBanned(PacketBanned other) : this() {
    banTime_ = other.banTime_;
    banDuration_ = other.banDuration_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketBanned Clone() {
    return new PacketBanned(this);
  }

  /// <summary>Field number for the "banTime" field.</summary>
  public const int BanTimeFieldNumber = 1;
  private int banTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BanTime {
    get { return banTime_; }
    set {
      banTime_ = value;
    }
  }

  /// <summary>Field number for the "banDuration" field.</summary>
  public const int BanDurationFieldNumber = 2;
  private int banDuration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BanDuration {
    get { return banDuration_; }
    set {
      banDuration_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketBanned);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketBanned other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BanTime != other.BanTime) return false;
    if (BanDuration != other.BanDuration) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BanTime != 0) hash ^= BanTime.GetHashCode();
    if (BanDuration != 0) hash ^= BanDuration.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BanTime != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(BanTime);
    }
    if (BanDuration != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BanDuration);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BanTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BanTime);
    }
    if (BanDuration != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BanDuration);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketBanned other) {
    if (other == null) {
      return;
    }
    if (other.BanTime != 0) {
      BanTime = other.BanTime;
    }
    if (other.BanDuration != 0) {
      BanDuration = other.BanDuration;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          BanTime = input.ReadInt32();
          break;
        }
        case 16: {
          BanDuration = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PacketDisconnect : pb::IMessage<PacketDisconnect> {
  private static readonly pb::MessageParser<PacketDisconnect> _parser = new pb::MessageParser<PacketDisconnect>(() => new PacketDisconnect());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PacketDisconnect> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PacketReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketDisconnect() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketDisconnect(PacketDisconnect other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PacketDisconnect Clone() {
    return new PacketDisconnect(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PacketDisconnect);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PacketDisconnect other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PacketDisconnect other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
